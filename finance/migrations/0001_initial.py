# Generated by Django 3.2.15 on 2023-04-02 21:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(null=True, verbose_name='Descrição da conta')),
                ('branch', models.IntegerField(null=True)),
                ('branch_formatted', models.CharField(max_length=30, null=True)),
                ('account_number', models.IntegerField(null=True)),
                ('digit', models.SmallIntegerField(null=True)),
                ('account_number_formatted', models.CharField(max_length=150, null=True)),
                ('dat_open', models.DateField(help_text='Data de início do contrato', null=True)),
                ('dat_close', models.DateField(help_text='Data de fim do contrato', null=True)),
            ],
            options={
                'db_table': 'finance"."account',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('code', models.SmallIntegerField(null=True)),
                ('name', models.CharField(max_length=150)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bank_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bank_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bank_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='Identificador da conta')),
                ('nm_bank', models.CharField(max_length=150, null=True, verbose_name='Nome da conta')),
                ('description', models.TextField(null=True, verbose_name='Descrição da conta')),
                ('branch', models.IntegerField(null=True)),
                ('branch_formatted', models.CharField(max_length=30, null=True)),
                ('account_number', models.IntegerField(null=True)),
                ('digit', models.SmallIntegerField(null=True)),
                ('account_number_formatted', models.CharField(max_length=150, null=True)),
                ('dat_start', models.DateField(help_text='Data de início do contrato', null=True)),
                ('dat_end', models.DateField(help_text='Data de fim do contrato', null=True)),
                ('is_pj', models.BooleanField(default=False, null=True)),
                ('is_debit', models.BooleanField(default=False, help_text='Indica se a conta tem possibilidade de cartão de débito', null=True)),
                ('is_credit', models.BooleanField(default=False, help_text='Indica se a conta tem possibilidade de cartão de crédito', null=True)),
                ('is_investment', models.BooleanField(default=False, help_text='Indica se a conta é para aplicações financeiras')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankaccount_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankaccount_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankaccount_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank_account',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500, null=True)),
                ('dat_start', models.DateField(help_text='Data de início do contrato', null=True)),
                ('dat_end', models.DateField(help_text='Data de fim do contrato', null=True)),
                ('dat_due', models.IntegerField(null=True)),
                ('dat_closing', models.IntegerField(help_text='Data de fechamento da fatura', null=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.account')),
                ('bank_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bankaccount')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_creditcard_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_creditcard_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_creditcard_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."credit_card',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=5)),
                ('is_shown', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currency_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currency_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currency_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."currency',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
                ('date', models.DateField()),
                ('dat_maturity', models.DateField()),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=15, null=True)),
                ('price', models.DecimalField(decimal_places=5, help_text='Preço do título no momento da compra', max_digits=15, null=True)),
                ('amount', models.DecimalField(decimal_places=5, max_digits=15)),
                ('interest_rate', models.CharField(choices=[('FIXED', 'Pré-fixado'), ('FLOATING', 'Pós-fixado'), ('HYBRID', 'Hibrido')], max_length=100)),
                ('interest_index', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_investment_created_by', to=settings.AUTH_USER_MODEL)),
                ('custodian', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bank')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_investment_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_investment_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."investment',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('price', models.DecimalField(decimal_places=15, max_digits=30)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currencyrate_base', to='finance.currency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currencyrate_created_by', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currencyrate_currency', to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currencyrate_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_currencyrate_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."currency_rate',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CreditCardBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('period', models.IntegerField(help_text='Período de referência', null=True)),
                ('dat_payment', models.DateField(null=True)),
                ('dat_purchase', models.DateField(null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Sempre em reais, valor final na fatura', max_digits=14)),
                ('amount_absolute', models.DecimalField(decimal_places=2, help_text='O mesmo do amount sem o sinal', max_digits=14)),
                ('amount_total', models.DecimalField(decimal_places=2, help_text='Total da compra, quando existe parcelas', max_digits=14)),
                ('amount_currency', models.DecimalField(decimal_places=2, help_text='Sempre real da compra, na moeda original', max_digits=14, null=True)),
                ('price_dollar', models.DecimalField(decimal_places=5, help_text='Usado em compra em outra moeda, em relação ao real', max_digits=14, null=True)),
                ('price_currency_dollar', models.DecimalField(decimal_places=5, help_text='Valor da moeda em relação ao dólar, usado na conversão', max_digits=14, null=True)),
                ('tax', models.DecimalField(decimal_places=2, default=0, help_text='Iof total da compra, quando aplicável', max_digits=7)),
                ('installment', models.SmallIntegerField(default=1)),
                ('tot_installment', models.SmallIntegerField(default=1)),
                ('is_installment', models.BooleanField(default=False)),
                ('description', models.TextField(null=True)),
                ('cash_flow', models.CharField(choices=[('OUTGOING', 'Saída'), ('INCOMING', 'Entrada')], max_length=100)),
                ('origin', models.CharField(default='SYSTEM', max_length=50)),
                ('is_validated', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_creditcardbill_created_by', to=settings.AUTH_USER_MODEL)),
                ('credit_card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.creditcard')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_creditcardbill_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('father', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.creditcardbill')),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_creditcardbill_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."creditcard_bill',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('group', models.CharField(choices=[('fixed_expenses', 'Despesas fixas'), ('variable_expenses', 'Despesas variáveis'), ('not_expense', 'Não é despesa')], default='variable_expenses', max_length=50)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_categorygroup_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_categorygroup_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_categorygroup_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."category_group',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BankStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('period', models.IntegerField(help_text='Período de referência', null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('amount_absolute', models.DecimalField(decimal_places=2, help_text='O mesmo do amount sem o sinal', max_digits=14)),
                ('dat_purchase', models.DateField(null=True)),
                ('description', models.TextField(null=True)),
                ('cash_flow', models.CharField(choices=[('OUTGOING', 'Saída'), ('INCOMING', 'Entrada')], max_length=100)),
                ('origin', models.CharField(default='SYSTEM', max_length=50)),
                ('is_validated', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bank_statement_account', to='finance.account')),
                ('account_old', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bankaccount')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankstatement_created_by', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankstatement_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankstatement_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank_statement',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BankAccountMonthlyBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('period', models.IntegerField(help_text='Período de referência', null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('earning', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bankaccount')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankaccountmonthlybalance_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankaccountmonthlybalance_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_bankaccountmonthlybalance_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank_account_monthly_balance',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bank'),
        ),
        migrations.AddField(
            model_name='account',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_account_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='deleted_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_account_deleted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='last_edited_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_account_last_edit_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
