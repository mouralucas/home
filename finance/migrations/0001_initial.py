# Generated by Django 4.2.3 on 2023-09-13 01:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(null=True, verbose_name='Descrição da conta')),
                ('branch', models.IntegerField(null=True)),
                ('branch_formatted', models.CharField(max_length=30, null=True)),
                ('account_number', models.IntegerField(null=True)),
                ('digit', models.SmallIntegerField(null=True)),
                ('account_number_formatted', models.CharField(max_length=150, null=True)),
                ('dat_open', models.DateField(help_text='Data de início do contrato', null=True)),
                ('dat_close', models.DateField(help_text='Data de fim do contrato', null=True)),
            ],
            options={
                'db_table': 'finance"."account',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('code', models.SmallIntegerField(null=True)),
                ('name', models.CharField(max_length=150)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='Identificador da conta')),
                ('nm_bank', models.CharField(max_length=150, null=True, verbose_name='Nome da conta')),
                ('description', models.TextField(null=True, verbose_name='Descrição da conta')),
                ('branch', models.IntegerField(null=True)),
                ('branch_formatted', models.CharField(max_length=30, null=True)),
                ('account_number', models.IntegerField(null=True)),
                ('digit', models.SmallIntegerField(null=True)),
                ('account_number_formatted', models.CharField(max_length=150, null=True)),
                ('dat_start', models.DateField(help_text='Data de início do contrato', null=True)),
                ('dat_end', models.DateField(help_text='Data de fim do contrato', null=True)),
                ('is_pj', models.BooleanField(default=False, null=True)),
                ('is_debit', models.BooleanField(default=False, help_text='Indica se a conta tem possibilidade de cartão de débito', null=True)),
                ('is_credit', models.BooleanField(default=False, help_text='Indica se a conta tem possibilidade de cartão de crédito', null=True)),
                ('is_investment', models.BooleanField(default=False, help_text='Indica se a conta é para aplicações financeiras')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank_account',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500, null=True)),
                ('dat_start', models.DateField(help_text='Data de início do contrato', null=True)),
                ('dat_end', models.DateField(help_text='Data de fim do contrato', null=True)),
                ('dat_due', models.IntegerField(null=True)),
                ('dat_closing', models.IntegerField(help_text='Data de fechamento da fatura', null=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.account')),
                ('bank_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bankaccount')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."credit_card',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=5)),
                ('is_shown', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."currency',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."index',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
                ('date', models.DateField()),
                ('maturity_at', models.DateField(null=True)),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=15, null=True)),
                ('price', models.DecimalField(decimal_places=5, help_text='Preço do título no momento da compra', max_digits=15, null=True)),
                ('amount', models.DecimalField(decimal_places=5, max_digits=15)),
                ('cash_flow', models.CharField(choices=[('OUTGOING', 'Saída'), ('INCOMING', 'Entrada')], max_length=100)),
                ('interest_rate', models.CharField(choices=[('FIXED', 'Pré-fixado'), ('FLOATING', 'Pós-fixado'), ('HYBRID', 'Hibrido')], max_length=100)),
                ('interest_index', models.CharField(max_length=50)),
                ('is_liquidated', models.BooleanField(default=False)),
                ('liquidated_at', models.DateField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('custodian', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bank')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('index', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.index')),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."investment',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Liquidity',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."liquidity',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentType',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=600, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('dynamic_description', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_investment_type_dynamic_description', to='core.dynamictexttranslation')),
                ('dynamic_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_investment_type_dynamic_name', to='core.dynamictexttranslation')),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.investmenttype')),
            ],
            options={
                'db_table': 'finance"."investment_type',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentStatement',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('reference', models.IntegerField()),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('earnings', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('investment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.investment')),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."investment_statement',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentBalance',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('period', models.IntegerField(help_text='Período de referência')),
                ('previous_balance', models.DecimalField(decimal_places=2, help_text='Saldo dos investimentos no período anterior', max_digits=14)),
                ('incoming', models.DecimalField(decimal_places=2, help_text='Todas as entradas no período', max_digits=14)),
                ('outgoing', models.DecimalField(decimal_places=2, help_text='Todas as saídas no período', max_digits=14)),
                ('transactions', models.DecimalField(decimal_places=2, help_text='Saldo de entradas e saídas', max_digits=14)),
                ('earnings', models.DecimalField(decimal_places=2, help_text='Soma de todos os rendimentos investimentos no período', max_digits=14)),
                ('transactions_balance', models.DecimalField(decimal_places=2, help_text='Soma das entradas e saídas mais os rendimentos', max_digits=14)),
                ('balance', models.DecimalField(decimal_places=2, help_text='Saldo do investimento no período', max_digits=14)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('investment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.investment')),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."investment_balance',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='investment',
            name='liquidity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.liquidity'),
        ),
        migrations.AddField(
            model_name='investment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='investment',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.investment'),
        ),
        migrations.AddField(
            model_name='investment',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.investmenttype'),
        ),
        migrations.CreateModel(
            name='FinanceData',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('index_name', models.CharField(help_text='Nome na tabela index, para auxiliar na validação diretamente na tabela', max_length=100, null=True)),
                ('date', models.DateField()),
                ('reference', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=6, max_digits=17)),
                ('periodicity_name', models.CharField(help_text='Nome na tabela periodicity, para auxiliar na validação diretamente na tabela', max_length=100, null=True)),
                ('unit', models.CharField(max_length=10, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('index', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.index')),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('periodicity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_data_periodicity', to='core.periodicity')),
            ],
            options={
                'db_table': 'finance"."finance_data',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('price', models.DecimalField(decimal_places=15, max_digits=30)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_base', to='finance.currency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_currency', to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."currency_rate',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CreditCardBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('period', models.IntegerField(help_text='Período de referência', null=True)),
                ('payment_at', models.DateField(null=True)),
                ('purchase_at', models.DateField(null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Sempre em reais, valor final na fatura', max_digits=14)),
                ('amount_absolute', models.DecimalField(decimal_places=2, help_text='O mesmo do amount sem o sinal', max_digits=14)),
                ('amount_total', models.DecimalField(decimal_places=2, help_text='Total da compra, quando existe parcelas', max_digits=14)),
                ('amount_reference', models.DecimalField(decimal_places=2, help_text='O valor da compra', max_digits=14, null=True)),
                ('dollar_quote', models.DecimalField(decimal_places=5, help_text='Valor do dólar em relação a moeda do cartão', max_digits=14, null=True)),
                ('dollar_currency_quote', models.DecimalField(decimal_places=5, help_text='Valor do dólar em relação a moeda original, em caso de compra em uma terceira moeda', max_digits=14, null=True)),
                ('tax', models.DecimalField(decimal_places=2, default=0, help_text='Iof total da compra, quando aplicável', max_digits=14)),
                ('installment', models.SmallIntegerField(default=1)),
                ('tot_installment', models.SmallIntegerField(default=1)),
                ('is_installment', models.BooleanField(default=False)),
                ('description', models.TextField(null=True)),
                ('cash_flow', models.CharField(choices=[('OUTGOING', 'Saída'), ('INCOMING', 'Entrada')], max_length=100)),
                ('origin', models.CharField(default='SYSTEM', max_length=50)),
                ('is_validated', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('credit_card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.creditcard')),
                ('currency_reference', models.ForeignKey(help_text='A moeda da compra', on_delete=django.db.models.deletion.DO_NOTHING, to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='finance.creditcardbill')),
            ],
            options={
                'db_table': 'finance"."credit_card_bill',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('group', models.CharField(choices=[('fixed_expenses', 'Despesas fixas'), ('variable_expenses', 'Despesas variáveis'), ('not_expense', 'Não é despesa')], default='variable_expenses', max_length=50)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."category_group',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('period', models.IntegerField(help_text='Período de referência')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('amount_absolute', models.DecimalField(decimal_places=2, help_text='O mesmo do amount sem o sinal', max_digits=14)),
                ('dat_purchase', models.DateField(null=True)),
                ('description', models.TextField(null=True)),
                ('cash_flow', models.CharField(choices=[('OUTGOING', 'Saída'), ('INCOMING', 'Entrada')], max_length=100)),
                ('amount_reference', models.DecimalField(decimal_places=2, default=0, help_text='Total na moeda de referência, no caso de câmbio, senão o mesmo valor de amount', max_digits=14)),
                ('dollar_quote', models.DecimalField(decimal_places=5, help_text='Para conta em outras moedas, em relação a moeda de referência', max_digits=14, null=True)),
                ('tax', models.DecimalField(decimal_places=5, default=0, help_text='Iof, aplicado sobre a cotação', max_digits=14)),
                ('perc_tax', models.DecimalField(decimal_places=2, default=0, help_text='Percentagem do IOF', max_digits=7)),
                ('bank_fee', models.DecimalField(decimal_places=5, default=0, help_text='Spread do banco, aplicado sobre a cotação', max_digits=14)),
                ('perc_bank_fee', models.DecimalField(decimal_places=2, default=0, help_text='Percentagem de spread do banco', max_digits=7)),
                ('effective_rate', models.DecimalField(decimal_places=5, help_text='VET: valor efetivo total. valor total do câmbio com as taxas e impostos', max_digits=14, null=True)),
                ('origin', models.CharField(default='SYSTEM', max_length=50)),
                ('is_validated', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bank_statement_account', to='finance.account')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.currency')),
                ('currency_reference', models.ForeignKey(default='BRL', help_text='Moeda de referência', on_delete=django.db.models.deletion.DO_NOTHING, related_name='finance_statement_currency_reference', to='finance.currency')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."bank_statement',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountBalance',
            fields=[
                ('status', models.BooleanField(default=True, null=True)),
                ('dat_created', models.DateTimeField(blank=True, null=True)),
                ('dat_last_edited', models.DateTimeField(blank=True, null=True)),
                ('dat_deleted', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('period', models.IntegerField(help_text='Período de referência')),
                ('previous_balance', models.DecimalField(decimal_places=2, help_text='Saldo da conta no período anterior', max_digits=14)),
                ('incoming', models.DecimalField(decimal_places=2, help_text='Todas as entradas no período', max_digits=14)),
                ('outgoing', models.DecimalField(decimal_places=2, help_text='Todas as saídas no período', max_digits=14)),
                ('transactions', models.DecimalField(decimal_places=2, help_text='Saldo de entradas e saídas', max_digits=14)),
                ('earnings', models.DecimalField(decimal_places=2, help_text='Soma de todos os rendimentos da conta no período', max_digits=14)),
                ('transactions_balance', models.DecimalField(decimal_places=2, help_text='Soma das entradas e saídas mais os rendimentos', max_digits=14)),
                ('balance', models.DecimalField(decimal_places=2, help_text='Saldo da conta no período', max_digits=14)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.account')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finance"."account_balance',
            },
            managers=[
                ('normal_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finance.bank'),
        ),
        migrations.AddField(
            model_name='account',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='deleted_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='last_edited_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_last_edit_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
